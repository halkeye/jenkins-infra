#!/bin/sh

# Verify the vhost.conf file for confluence

# Read the RewriteRule source entries, check them against a local file
# of known URLs.
#
# If not found in the local file, and not found in a file of known
# redirects for pages that do not exist, use an HTTP HEAD request to check
# the URL exists

return_code=0

for pattern in $(grep RewriteRule.*display dist/profile/templates/confluence/vhost.conf | grep -v -F '(' | grep -i -v -F SECURITY | awk '{print $2}' | sed -e 's,\\+,+,g' -e 's,",,g' ); do
    if grep -q $pattern scripts/confluence_urls; then
        # Found pattern in the list of working confluence pages
        :
    else
        if grep -q $pattern scripts/confluence_urls_without_a_page; then
            # Found pattern in the list of confluence pages that are expected to not exist
            :
        else
            # Transform pattern into a URL that will bypass the existing redirect
            url=$(echo $pattern | sed -e 's,[\^],,g' -e 's,[$],,g' -e 's,/JENKINS/,//JENKINS/,g')
            if wget -q --method=HEAD https://wiki.jenkins.io/$url; then
                echo Adding https://wiki.jenkins.io/$url to confluence_urls
                echo $url | sed 's,//JENKINS/,/JENKINS/,g' >> scripts/confluence_urls
                return_code=1
            else
                echo HEAD for https://wiki.jenkins.io/$url failed
                echo $url | sed 's,//JENKINS/,/JENKINS/,g' >> scripts/confluence_urls_without_a_page
                return_code=2
            fi
        fi
    fi
done

if [ $return_code != 0 ]; then
    echo "======================== New redirect addition needs update to test data file ========================"
    git diff
    echo "======================== End of redirect addition update for test data file ========================"
fi

exit $return_code
